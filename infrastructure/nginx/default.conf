# High-performance Nginx configuration for Laravel + React SPA
# Optimized for production e-commerce workloads

# Upstream definitions for load balancing
upstream laravel_backend {
    # Use least_conn for better distribution under varying load
    least_conn;
    server laravel-core:9000 max_fails=3 fail_timeout=30s;
    # Add more Laravel instances here for horizontal scaling
    # server laravel-core-2:9000 max_fails=3 fail_timeout=30s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;

# Main server block
server {
    listen 80;
    listen [::]:80;
    server_name localhost ecom.local;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Document root
    root /var/www/html/public;
    index index.php index.html;
    
    # Charset
    charset utf-8;
    
    # Logging
    access_log /var/log/nginx/ecom_access.log;
    error_log /var/log/nginx/ecom_error.log warn;
    
    # ==========================================================================
    # STATIC ASSETS OPTIMIZATION
    # ==========================================================================
    
    # Handle static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json
            image/svg+xml;
    }
    
    # ==========================================================================
    # API ROUTES WITH RATE LIMITING
    # ==========================================================================
    
    # API routes with rate limiting
    location /api/ {
        # Apply rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/(login|register|password) {
        limit_req zone=auth_limit burst=5 nodelay;
        limit_req_status 429;
        
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # ==========================================================================
    # ADMIN PANEL (React SPA)
    # ==========================================================================
    
    # Admin panel routes - serve React SPA
    location /admin {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Security headers for admin panel
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
    }
    
    # ==========================================================================
    # PHP-FPM PROCESSING
    # ==========================================================================
    
    # Main application entry point
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP-FPM configuration
    location ~ \.php$ {
        # Security: Don't execute PHP files in uploads directory
        location ~ ^/uploads/.*\.php$ {
            deny all;
        }
        
        fastcgi_pass laravel_backend;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # FastCGI optimizations
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;
        
        # Hide PHP version
        fastcgi_hide_header X-Powered-By;
    }
    
    # ==========================================================================
    # SECURITY & RESTRICTIONS
    # ==========================================================================
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to composer files
    location ~ composer\.(json|lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to package.json and other Node.js files
    location ~ package(-lock)?\.json$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to environment files
    location ~ \.env {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to log files
    location ~ \.log$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ==========================================================================
    # PERFORMANCE OPTIMIZATIONS
    # ==========================================================================
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client body size limit (for file uploads)
    client_max_body_size 50M;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Buffer sizes
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
}

# HTTPS server block (for production)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost ecom.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Include the same configuration as HTTP server
    include /etc/nginx/conf.d/common.conf;
}
